name: Build, Push and Deploy Next.js app

on:
  push:
    branches:
      - "main"
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  REPO: ${{ github.repository }}
  CONTAINER: nextjs-crud-app
  TAG: "1.0.0" # 適宜変更
  PORT: 51002 # 適宜変更（本番環境の空きポートと相談しながら）テスト：51002 本番：なし

jobs:
  push_to_registry:
    name: Push Docker image to GitHub Packages
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.REPO }}:${{ env.TAG }}

  deploy:
    name: Deploy to Conoha
    needs: [push_to_registry]
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH connection
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Login to the GitHub Packages Docker Registry
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "docker login ${{ env.REGISTRY }} -u ${{ github.actor }} -p ${{ secrets.PERSONAL_ACCESS_TOKEN }}"

      - name: Stop deployed container
        continue-on-error: true
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "docker stop ${{ env.CONTAINER }}"

      - name: Remove deployed container
        continue-on-error: true
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "docker rm -v ${{ env.CONTAINER }}"

      - name: Pull latest container
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "docker pull ${{ env.REGISTRY }}/${{ env.REPO }}:${{ env.TAG }}"

      - name: Delete unused images
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "docker image prune"

      - name: Start docker container
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "docker run -p ${{ env.PORT }}:3000 -e NEXT_PUBLIC_API_BASE_URL=${{ secrets.API_BASE_URL }} -d --name=${{ env.CONTAINER }} --net=caddy-net ${{ env.REGISTRY }}/${{ env.REPO }}:${{ env.TAG }}"

      - name: Logout from the GitHub Packages Docker Registry
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "docker logout ${{ env.REGISTRY }}"
